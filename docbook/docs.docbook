<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book xmlns="http://docbook.org/ns/docbook" version="5.0">
    <info>
        <title>Schedule2calendar - Документация</title>
        <author>
            <personname>
                <firstname>Владислав</firstname>
                <surname>Полетаев</surname>
            </personname>
        </author>
    </info>
    <abstract>
        <para>Данный документ предназначен для использования разработчиками программного обеспечения. Документ содержит общие сведения о программном продукте, технические характеристики: структуру, описание компонентов, примеры использования определнных в проекте публичных интерфейсов.</para>
        <para>Проект доступен по адресу <ulink url="https://ipo-14b.github.io/poletaev/">ipo-14b.github.io/poletaev</ulink></para>
    </abstract>

    <chapter>
        <title>Описание программного продукта</title>
        <para>Проект schedule2calendar предназначен для упрощения создания файлов iCalendar при добавлении расписаний занятий учащимися средних и высших учебных учереждений.</para>
        <para>На снимке экрана приведен внешний вид приложения на момент написания настоящего документа (<xref linkend="screen" />).</para>
        <figure id="screen">
            <title><para>Снимок работы программы</para></title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="media/screen.png" format="PNG" />
                </imageobject>
            </mediaobject>
        </figure>

        <para>Редактирование данных производится с использованием элемента управления Popover (<xref linkend="popover"/>).</para>
        <figure id="popover">
            <title><para>Редактор данных приложения</para></title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="media/editing.png" scalefit="1" width="200" format="PNG" />
                </imageobject>
            </mediaobject>
        </figure>

        <para>Приложение реализует графический интерфейс, который позволяет пользователю:</para>
        <itemizedlist>
            <listitem>
                <para>редактировать время начала и конца до десяти занятий;</para>
            </listitem>
            <listitem>
                <para>добалять удалять проводимые занятия для каждого дня недели;</para>
            </listitem>
            <listitem>
                <para>для каждого занятия выбрать количество чередующихся вариантов занятий: одинаковое занятие каждую неделю, два чередующегося варианта занятия или четыре варианта занятия;</para>
            </listitem>
            <listitem>
                <para>для каждого варианта занятия ввести название и место проведения занятия;</para>
            </listitem>
            <listitem>
                <para>деактивировать один или несколько вариантов занятия, в случае если оно проводится не каждую неделю;</para>
            </listitem>
            <listitem>
                <para>по сформированному расписанию генерировать файл в формате .ics, по стандарту, определенному в <ulink url="https://tools.ietf.org/html/rfc5545">RFC 5545</ulink></para>
            </listitem>
        </itemizedlist>
    </chapter>

    <chapter>
        <title>Внешние зависимости</title>
        <section>
            <title>npm</title>
            <para>Для управления зависимостями проекта используется пакетный менеджер npm.</para>
            <para>Все зависимости указаны в файле <code>package.json</code>. Для установки всех зависимостей необходимо выполнить:</para>
            <programlisting>
                <![CDATA[npm install]]>
            </programlisting>
        </section>
        <section>
            <title>Grunt</title>
            <para>Для построения проекта в форму, доступную для использования в production используется система автоматизированной сборки Grunt. Конфигурация Grunt содержится в файле <code>Gruntfile.js</code></para>
            <para>Файлы, сформированные в результате сборки помещаются в директорию <code>build</code>.</para>
            <para>В проекте определены 6 задач:</para>
            <section>
                <title>less</title>
                <para>Преобразует файлы .less в файлы .css. В результате работы задачи <sbr/>формируется файл app.css и elements.css. На вход подаются файлы директоиии <code>src/less</code>.</para>
            </section>
            <section>
                <title>browserify</title>
                <para>Преобразует JavaScript файлы, написанные с использованием EcmaScript 6 с использованием диалекта JSX к виду, поддерживаемому большинством браузеров.</para>
            </section>
            <section>
                <title>copy</title>
                <para>Копирует файл <code>index.html</code> из директории <code>src</code> в директорию <code>build</code></para>
            </section>
            <section>
                <title>watch</title>
                <para>Выполняет задачи copy, less или browserify при изменении определенных исходных файлов</para>
            </section>
            <section>
                <title>default</title>
                <para>Выполняет задачи copy, less и browserify.</para>
            </section>
            <section>
                <title>dev</title>
                <para>Выполняет задачи default и watch.</para>
            </section>
            <section>
                <title>uglify</title>
                <para>Выполняет сжатие JavaScript-файлов.</para>
            </section>
            <section>
                <title>production</title>
                <para>Выполняет сборку проекта и сжатие полученных файлов</para>
            </section>
        </section>
        <section>
            <title>Зависимости этапа компиляции</title>
            <itemizedlist>
                <listitem><para><emphasis>assemble-less</emphasis>: используется для сборки less-файлов</para></listitem>
                <listitem><para><emphasis>grunt-contrib-watch</emphasis>: используется для отслеживания изменений файлов</para></listitem>
                <listitem><para><emphasis>grunt-browserify</emphasis>: используется для управления сборкой JS-файлов</para></listitem>
                <listitem><para><emphasis>grunt-copy</emphasis>: используется для копирования файлов</para></listitem>
                <listitem><para><emphasis>babelify</emphasis>: используется для сборки JS файлов</para></listitem>
                <listitem><para><emphasis>babel-preset-es2015</emphasis>: используется для преобразования стандарта EcmaScript 2015</para></listitem>
                <listitem><para><emphasis>babel-preset-react</emphasis>: используется для преобразования JSX-файлов</para></listitem>
                <listitem><para><emphasis>envify</emphasis>: устанавливает переменные среды для сборки в production</para></listitem>
                <listitem><para><emphasis>uglifyify</emphasis>: сжимает каждый Javascript файл перед объединением</para></listitem>
                <listitem><para><emphasis>uglify</emphasis>: сжимает Javascript-файлы</para></listitem>
            </itemizedlist>
        </section>
        <section>
            <title>moment</title>
            <para>Библиотека для манипуляции датами. Использоуется во время генерации файла .ics</para>
        </section>
        <section>
            <title>ical-generator</title>
            <para>Библиотека для формирования файла iCalendar.</para>
        </section>
    </chapter>

    <chapter>
        <title>Структура приложения</title>
        <para>Приложение построено в виде иерархии React-компонентов (<xref linkend="components" />).</para>
        <figure id="components">
            <title><para>Иерархия компонентов</para></title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="media/components.png" width="70%" format="PNG" />
                </imageobject>
            </mediaobject>
        </figure>

        <para>Для работы компонентов используется модель данных, описанная на диаграмме (<xref linkend="classes" />).</para>
        <figure id="classes">
            <title><para>Классы модели данных</para></title>
            <mediaobject>
                <imageobject>
                    <imagedata fileref="media/classes.png" scalefit="1" format="PNG" />
                </imageobject>
            </mediaobject>
        </figure>
    </chapter>

    <chapter>
        <title>Примеры использования публичного интерфейса модулей системы</title>
        <example>
            <title>Создание событий</title>
            <para>В приведенном ниже коде представлен пример создания нового календаря и добавления нового периодического события.</para>
            <programlisting><![CDATA[
let weekDays = require("./weekdays.js");
let schedule = require("./schedule.js");

let scheduleObject = new Schedule();
let weekDay = weekDays[2]; // Среда
let lesson = scheduleObject.lessons[1]; // Второе занятие
let item = scheduleObject.createItem(weekDay, lesson);
item.setPartsCount(2);
item.parts[0].name = "Занятие 1";
item.parts[0].location = "Аудитория 1";
item.parts[1].name = "Занятие 2";
item.parts[1].location = "Аудитория 2";
            ]]></programlisting>
        </example>

        <example>
            <title>Изменение веремени проведения занятия</title>
            <para>В приведенном ниже коде представлен пример модификации времени начала и завершения занятия.</para>
            <programlisting><![CDATA[
let schedule = require("./schedule.js");

let scheduleObject = new Schedule();
let lesson = scheduleObject.lessons[1]; // Второе занятие
lesson.setStartTime(9 * 60 + 55); // 9 часов 55 минут
lesson.setEndTime(10 * 60 + 30); // 10 часов 3 минут
            ]]></programlisting>
        </example>

        <example>
            <title>Генерация файла календаря</title>
            <para>Генерация календаря включает в себя вызов функции <code>generate</code> модуля <code>./generator.js</code></para>
            <programlisting><![CDATA[
let generate = require("./generator.js").generate;
let canGenerate = require("./generator.js").canGenerate;

let schedule = new Schedule();
let startDate = "2017-03-12";
let endDate = "2017-05-16";
...
// Проверка: для любого события, добавленного в календарь, должно быть задано время начала и конца 
if (!canGenerate(schedule)){
    alert("Необходимо ввести даты конца и начала занятий для всех событий");

// Проверка: в календарь должно быть добавлено хотя-бы одно событие
}else if (schedule.items.length == 0){
    alert("Необходимо добавить хотя бы одно событие");
}else{
    // Генерация. Созданный файл будет загружен на компьютер пользвателя
    generate(schedule, startDate, endState);
}
            ]]></programlisting>
        </example>
    </chapter>

</book>
